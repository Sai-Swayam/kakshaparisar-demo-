{
  "version": 3,
  "sources": ["../../../src/lib/reordering/reordering.ts"],
  "sourcesContent": ["import { IndexKey } from './IndexKey'\nimport { INTEGER_ZERO, generateNKeysBetween, validateOrder } from './dgreensp/dgreensp'\n\n/**\n * The index key for the first index - 'a0'.\n * @public\n */\nexport const ZERO_INDEX_KEY = INTEGER_ZERO\n\n/** @internal */\nexport function validateIndexKey(key: string): asserts key is IndexKey {\n\tvalidateOrder(key)\n}\n\n/**\n * Get a number of indices between two indices.\n * @param below - The index below.\n * @param above - The index above.\n * @param n - The number of indices to get.\n * @public\n */\nexport function getIndicesBetween(\n\tbelow: IndexKey | undefined,\n\tabove: IndexKey | undefined,\n\tn: number\n) {\n\treturn generateNKeysBetween(below, above, n)\n}\n\n/**\n * Get a number of indices above an index.\n * @param below - The index below.\n * @param n - The number of indices to get.\n * @public\n */\nexport function getIndicesAbove(below: IndexKey | undefined, n: number) {\n\treturn generateNKeysBetween(below, undefined, n)\n}\n\n/**\n * Get a number of indices below an index.\n * @param above - The index above.\n * @param n - The number of indices to get.\n * @public\n */\nexport function getIndicesBelow(above: IndexKey | undefined, n: number) {\n\treturn generateNKeysBetween(undefined, above, n)\n}\n\n/**\n * Get the index between two indices.\n * @param below - The index below.\n * @param above - The index above.\n * @public\n */\nexport function getIndexBetween(below: IndexKey | undefined, above: IndexKey | undefined) {\n\treturn generateNKeysBetween(below, above, 1)[0]\n}\n\n/**\n * Get the index above a given index.\n * @param below - The index below.\n * @public\n */\nexport function getIndexAbove(below?: IndexKey | undefined) {\n\treturn generateNKeysBetween(below, undefined, 1)[0]\n}\n\n/**\n * Get the index below a given index.\n * @param above - The index above.\n *  @public\n */\nexport function getIndexBelow(above?: IndexKey | undefined) {\n\treturn generateNKeysBetween(undefined, above, 1)[0]\n}\n\n/**\n * Get n number of indices, starting at an index.\n * @param n - The number of indices to get.\n * @param start -  The index to start at.\n * @public\n */\nexport function getIndices(n: number, start = 'a1' as IndexKey) {\n\treturn [start, ...generateNKeysBetween(start, undefined, n)]\n}\n\n/**\n * Sort by index.\n * @param a - An object with an index property.\n * @param b - An object with an index property.\n * @public */\nexport function sortByIndex<T extends { index: IndexKey }>(a: T, b: T) {\n\tif (a.index < b.index) {\n\t\treturn -1\n\t} else if (a.index > b.index) {\n\t\treturn 1\n\t}\n\treturn 0\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAkE;AAM3D,MAAM,iBAAiB;AAGvB,SAAS,iBAAiB,KAAsC;AACtE,qCAAc,GAAG;AAClB;AASO,SAAS,kBACf,OACA,OACA,GACC;AACD,aAAO,sCAAqB,OAAO,OAAO,CAAC;AAC5C;AAQO,SAAS,gBAAgB,OAA6B,GAAW;AACvE,aAAO,sCAAqB,OAAO,QAAW,CAAC;AAChD;AAQO,SAAS,gBAAgB,OAA6B,GAAW;AACvE,aAAO,sCAAqB,QAAW,OAAO,CAAC;AAChD;AAQO,SAAS,gBAAgB,OAA6B,OAA6B;AACzF,aAAO,sCAAqB,OAAO,OAAO,CAAC,EAAE,CAAC;AAC/C;AAOO,SAAS,cAAc,OAA8B;AAC3D,aAAO,sCAAqB,OAAO,QAAW,CAAC,EAAE,CAAC;AACnD;AAOO,SAAS,cAAc,OAA8B;AAC3D,aAAO,sCAAqB,QAAW,OAAO,CAAC,EAAE,CAAC;AACnD;AAQO,SAAS,WAAW,GAAW,QAAQ,MAAkB;AAC/D,SAAO,CAAC,OAAO,OAAG,sCAAqB,OAAO,QAAW,CAAC,CAAC;AAC5D;AAOO,SAAS,YAA2C,GAAM,GAAM;AACtE,MAAI,EAAE,QAAQ,EAAE,OAAO;AACtB,WAAO;AAAA,EACR,WAAW,EAAE,QAAQ,EAAE,OAAO;AAC7B,WAAO;AAAA,EACR;AACA,SAAO;AACR;",
  "names": []
}
