{
  "version": 3,
  "sources": ["../../../src/lib/hooks/useLocalStore.ts"],
  "sourcesContent": ["import { TLStoreSnapshot } from '@tldraw/tlschema'\nimport { useEffect, useState } from 'react'\nimport { TLEditorSnapshot } from '../config/TLEditorSnapshot'\nimport { TLStoreOptions } from '../config/createTLStore'\nimport { TLStoreWithStatus } from '../utils/sync/StoreWithStatus'\nimport { TLLocalSyncClient } from '../utils/sync/TLLocalSyncClient'\nimport { uniqueId } from '../utils/uniqueId'\nimport { useTLStore } from './useTLStore'\n\n/** @internal */\nexport function useLocalStore({\n\tpersistenceKey,\n\tsessionId,\n\t...rest\n}: {\n\tpersistenceKey?: string\n\tsessionId?: string\n\tsnapshot?: TLEditorSnapshot | TLStoreSnapshot\n} & TLStoreOptions): TLStoreWithStatus {\n\tconst [state, setState] = useState<{ id: string; storeWithStatus: TLStoreWithStatus } | null>(\n\t\tnull\n\t)\n\tconst store = useTLStore(rest)\n\n\tuseEffect(() => {\n\t\tconst id = uniqueId()\n\n\t\tif (!persistenceKey) {\n\t\t\tsetState({\n\t\t\t\tid,\n\t\t\t\tstoreWithStatus: { status: 'not-synced', store },\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tsetState({\n\t\t\tid,\n\t\t\tstoreWithStatus: { status: 'loading' },\n\t\t})\n\n\t\tconst setStoreWithStatus = (storeWithStatus: TLStoreWithStatus) => {\n\t\t\tsetState((prev) => {\n\t\t\t\tif (prev?.id === id) {\n\t\t\t\t\treturn { id, storeWithStatus }\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\n\t\tconst client = new TLLocalSyncClient(store, {\n\t\t\tsessionId,\n\t\t\tpersistenceKey,\n\t\t\tonLoad() {\n\t\t\t\tsetStoreWithStatus({ store, status: 'synced-local' })\n\t\t\t},\n\t\t\tonLoadError(err: any) {\n\t\t\t\tsetStoreWithStatus({ status: 'error', error: err })\n\t\t\t},\n\t\t})\n\n\t\treturn () => {\n\t\t\tsetState((prevState) => (prevState?.id === id ? null : prevState))\n\t\t\tclient.close()\n\t\t}\n\t}, [persistenceKey, store, sessionId])\n\n\treturn state?.storeWithStatus ?? { status: 'loading' }\n}\n"],
  "mappings": "AACA,SAAS,WAAW,gBAAgB;AAIpC,SAAS,yBAAyB;AAClC,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAGpB,SAAS,cAAc;AAAA,EAC7B;AAAA,EACA;AAAA,EACA,GAAG;AACJ,GAIuC;AACtC,QAAM,CAAC,OAAO,QAAQ,IAAI;AAAA,IACzB;AAAA,EACD;AACA,QAAM,QAAQ,WAAW,IAAI;AAE7B,YAAU,MAAM;AACf,UAAM,KAAK,SAAS;AAEpB,QAAI,CAAC,gBAAgB;AACpB,eAAS;AAAA,QACR;AAAA,QACA,iBAAiB,EAAE,QAAQ,cAAc,MAAM;AAAA,MAChD,CAAC;AACD;AAAA,IACD;AAEA,aAAS;AAAA,MACR;AAAA,MACA,iBAAiB,EAAE,QAAQ,UAAU;AAAA,IACtC,CAAC;AAED,UAAM,qBAAqB,CAAC,oBAAuC;AAClE,eAAS,CAAC,SAAS;AAClB,YAAI,MAAM,OAAO,IAAI;AACpB,iBAAO,EAAE,IAAI,gBAAgB;AAAA,QAC9B;AACA,eAAO;AAAA,MACR,CAAC;AAAA,IACF;AAEA,UAAM,SAAS,IAAI,kBAAkB,OAAO;AAAA,MAC3C;AAAA,MACA;AAAA,MACA,SAAS;AACR,2BAAmB,EAAE,OAAO,QAAQ,eAAe,CAAC;AAAA,MACrD;AAAA,MACA,YAAY,KAAU;AACrB,2BAAmB,EAAE,QAAQ,SAAS,OAAO,IAAI,CAAC;AAAA,MACnD;AAAA,IACD,CAAC;AAED,WAAO,MAAM;AACZ,eAAS,CAAC,cAAe,WAAW,OAAO,KAAK,OAAO,SAAU;AACjE,aAAO,MAAM;AAAA,IACd;AAAA,EACD,GAAG,CAAC,gBAAgB,OAAO,SAAS,CAAC;AAErC,SAAO,OAAO,mBAAmB,EAAE,QAAQ,UAAU;AACtD;",
  "names": []
}
