{
  "version": 3,
  "sources": ["../../../../src/lib/shapes/frame/FrameShapeUtil.tsx"],
  "sourcesContent": ["import {\n\tBaseBoxShapeUtil,\n\tGeometry2d,\n\tRectangle2d,\n\tSVGContainer,\n\tSvgExportContext,\n\tTLFrameShape,\n\tTLGroupShape,\n\tTLOnResizeHandler,\n\tTLShape,\n\tcanonicalizeRotation,\n\tframeShapeMigrations,\n\tframeShapeProps,\n\tgetDefaultColorTheme,\n\tlast,\n\tresizeBox,\n\ttoDomPrecision,\n\tuseValue,\n} from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { createTextJsxFromSpans } from '../shared/createTextJsxFromSpans'\nimport { useDefaultColorTheme } from '../shared/useDefaultColorTheme'\nimport { FrameHeading } from './components/FrameHeading'\n\nexport function defaultEmptyAs(str: string, dflt: string) {\n\tif (str.match(/^\\s*$/)) {\n\t\treturn dflt\n\t}\n\treturn str\n}\n\n/** @public */\nexport class FrameShapeUtil extends BaseBoxShapeUtil<TLFrameShape> {\n\tstatic override type = 'frame' as const\n\tstatic override props = frameShapeProps\n\tstatic override migrations = frameShapeMigrations\n\n\toverride canEdit = () => true\n\n\toverride getDefaultProps(): TLFrameShape['props'] {\n\t\treturn { w: 160 * 2, h: 90 * 2, name: '' }\n\t}\n\n\toverride getGeometry(shape: TLFrameShape): Geometry2d {\n\t\treturn new Rectangle2d({\n\t\t\twidth: shape.props.w,\n\t\t\theight: shape.props.h,\n\t\t\tisFilled: false,\n\t\t})\n\t}\n\n\toverride component(shape: TLFrameShape) {\n\t\tconst bounds = this.editor.getShapeGeometry(shape).bounds\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tconst theme = useDefaultColorTheme()\n\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tconst isCreating = useValue(\n\t\t\t'is creating this shape',\n\t\t\t() => {\n\t\t\t\tconst resizingState = this.editor.getStateDescendant('select.resizing')\n\t\t\t\tif (!resizingState) return false\n\t\t\t\tif (!resizingState.getIsActive()) return false\n\t\t\t\tconst info = (resizingState as typeof resizingState & { info: { isCreating: boolean } })\n\t\t\t\t\t?.info\n\t\t\t\tif (!info) return false\n\t\t\t\treturn info.isCreating && this.editor.getOnlySelectedShapeId() === shape.id\n\t\t\t},\n\t\t\t[shape.id]\n\t\t)\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<SVGContainer>\n\t\t\t\t\t<rect\n\t\t\t\t\t\tclassName={classNames('tl-frame__body', { 'tl-frame__creating': isCreating })}\n\t\t\t\t\t\twidth={bounds.width}\n\t\t\t\t\t\theight={bounds.height}\n\t\t\t\t\t\tfill={theme.solid}\n\t\t\t\t\t\tstroke={theme.text}\n\t\t\t\t\t/>\n\t\t\t\t</SVGContainer>\n\t\t\t\t{isCreating ? null : (\n\t\t\t\t\t<FrameHeading\n\t\t\t\t\t\tid={shape.id}\n\t\t\t\t\t\tname={shape.props.name}\n\t\t\t\t\t\twidth={bounds.width}\n\t\t\t\t\t\theight={bounds.height}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\toverride toSvg(shape: TLFrameShape, ctx: SvgExportContext) {\n\t\tconst theme = getDefaultColorTheme({ isDarkMode: ctx.isDarkMode })\n\n\t\t// Text label\n\t\tconst pageRotation = canonicalizeRotation(\n\t\t\tthis.editor.getShapePageTransform(shape.id)!.rotation()\n\t\t)\n\t\t// rotate right 45 deg\n\t\tconst offsetRotation = pageRotation + Math.PI / 4\n\t\tconst scaledRotation = (offsetRotation * (2 / Math.PI) + 4) % 4\n\t\tconst labelSide = Math.floor(scaledRotation)\n\n\t\tlet labelTranslate: string\n\t\tswitch (labelSide) {\n\t\t\tcase 0: // top\n\t\t\t\tlabelTranslate = ``\n\t\t\t\tbreak\n\t\t\tcase 3: // right\n\t\t\t\tlabelTranslate = `translate(${toDomPrecision(shape.props.w)}, 0) rotate(90)`\n\t\t\t\tbreak\n\t\t\tcase 2: // bottom\n\t\t\t\tlabelTranslate = `translate(${toDomPrecision(shape.props.w)}, ${toDomPrecision(\n\t\t\t\t\tshape.props.h\n\t\t\t\t)}) rotate(180)`\n\t\t\t\tbreak\n\t\t\tcase 1: // left\n\t\t\t\tlabelTranslate = `translate(0, ${toDomPrecision(shape.props.h)}) rotate(270)`\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow Error('labelSide out of bounds')\n\t\t}\n\n\t\t// Truncate with ellipsis\n\t\tconst opts = {\n\t\t\tfontSize: 12,\n\t\t\tfontFamily: 'Inter, sans-serif',\n\t\t\ttextAlign: 'start' as const,\n\t\t\twidth: shape.props.w,\n\t\t\theight: 32,\n\t\t\tpadding: 0,\n\t\t\tlineHeight: 1,\n\t\t\tfontStyle: 'normal',\n\t\t\tfontWeight: 'normal',\n\t\t\toverflow: 'truncate-ellipsis' as const,\n\t\t\tverticalTextAlign: 'middle' as const,\n\t\t}\n\n\t\tconst spans = this.editor.textMeasure.measureTextSpans(\n\t\t\tdefaultEmptyAs(shape.props.name, 'Frame') + String.fromCharCode(8203),\n\t\t\topts\n\t\t)\n\n\t\tconst firstSpan = spans[0]\n\t\tconst lastSpan = last(spans)!\n\t\tconst labelTextWidth = lastSpan.box.w + lastSpan.box.x - firstSpan.box.x\n\t\tconst text = createTextJsxFromSpans(this.editor, spans, {\n\t\t\toffsetY: -opts.height - 2,\n\t\t\t...opts,\n\t\t})\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<rect\n\t\t\t\t\twidth={shape.props.w}\n\t\t\t\t\theight={shape.props.h}\n\t\t\t\t\tfill={theme.solid}\n\t\t\t\t\tstroke={theme.black.solid}\n\t\t\t\t\tstrokeWidth={1}\n\t\t\t\t\trx={1}\n\t\t\t\t\try={1}\n\t\t\t\t/>\n\t\t\t\t<g transform={labelTranslate}>\n\t\t\t\t\t<rect\n\t\t\t\t\t\tx={-8}\n\t\t\t\t\t\ty={-opts.height - 4}\n\t\t\t\t\t\twidth={labelTextWidth + 16}\n\t\t\t\t\t\theight={opts.height}\n\t\t\t\t\t\tfill={theme.background}\n\t\t\t\t\t\trx={4}\n\t\t\t\t\t\try={4}\n\t\t\t\t\t/>\n\t\t\t\t\t{text}\n\t\t\t\t</g>\n\t\t\t</>\n\t\t)\n\t}\n\n\tindicator(shape: TLFrameShape) {\n\t\tconst bounds = this.editor.getShapeGeometry(shape).bounds\n\n\t\treturn (\n\t\t\t<rect\n\t\t\t\twidth={toDomPrecision(bounds.width)}\n\t\t\t\theight={toDomPrecision(bounds.height)}\n\t\t\t\tclassName={`tl-frame-indicator`}\n\t\t\t/>\n\t\t)\n\t}\n\n\toverride canReceiveNewChildrenOfType = (shape: TLShape, _type: TLShape['type']) => {\n\t\treturn !shape.isLocked\n\t}\n\n\toverride providesBackgroundForChildren(): boolean {\n\t\treturn true\n\t}\n\n\toverride canDropShapes = (shape: TLFrameShape, _shapes: TLShape[]): boolean => {\n\t\treturn !shape.isLocked\n\t}\n\n\toverride onDragShapesOver = (frame: TLFrameShape, shapes: TLShape[]) => {\n\t\tif (!shapes.every((child) => child.parentId === frame.id)) {\n\t\t\tthis.editor.reparentShapes(shapes, frame.id)\n\t\t}\n\t}\n\n\toverride onDragShapesOut = (_shape: TLFrameShape, shapes: TLShape[]): void => {\n\t\tconst parent = this.editor.getShape(_shape.parentId)\n\t\tconst isInGroup = parent && this.editor.isShapeOfType<TLGroupShape>(parent, 'group')\n\n\t\t// If frame is in a group, keep the shape\n\t\t// moved out in that group\n\n\t\tif (isInGroup) {\n\t\t\tthis.editor.reparentShapes(shapes, parent.id)\n\t\t} else {\n\t\t\tthis.editor.reparentShapes(shapes, this.editor.getCurrentPageId())\n\t\t}\n\t}\n\n\toverride onResize: TLOnResizeHandler<any> = (shape, info) => {\n\t\treturn resizeBox(shape, info)\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
