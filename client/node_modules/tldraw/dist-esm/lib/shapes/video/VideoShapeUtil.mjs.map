{
  "version": 3,
  "sources": ["../../../../src/lib/shapes/video/VideoShapeUtil.tsx"],
  "sourcesContent": ["/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n\tBaseBoxShapeUtil,\n\tHTMLContainer,\n\tTLVideoShape,\n\ttoDomPrecision,\n\tuseIsEditing,\n\tvideoShapeMigrations,\n\tvideoShapeProps,\n} from '@tldraw/editor'\nimport { ReactEventHandler, useCallback, useEffect, useRef, useState } from 'react'\nimport { BrokenAssetIcon } from '../shared/BrokenAssetIcon'\nimport { HyperlinkButton } from '../shared/HyperlinkButton'\nimport { useAsset } from '../shared/useAsset'\nimport { usePrefersReducedMotion } from '../shared/usePrefersReducedMotion'\n\n/** @public */\nexport class VideoShapeUtil extends BaseBoxShapeUtil<TLVideoShape> {\n\tstatic override type = 'video' as const\n\tstatic override props = videoShapeProps\n\tstatic override migrations = videoShapeMigrations\n\n\toverride canEdit = () => true\n\toverride isAspectRatioLocked = () => true\n\n\toverride getDefaultProps(): TLVideoShape['props'] {\n\t\treturn {\n\t\t\tw: 100,\n\t\t\th: 100,\n\t\t\tassetId: null,\n\t\t\ttime: 0,\n\t\t\tplaying: true,\n\t\t\turl: '',\n\t\t}\n\t}\n\n\tcomponent(shape: TLVideoShape) {\n\t\tconst { editor } = this\n\t\tconst showControls = editor.getShapeGeometry(shape).bounds.w * editor.getZoomLevel() >= 110\n\t\tconst { asset, url } = useAsset(shape.id, shape.props.assetId, shape.props.w)\n\t\tconst { time, playing } = shape.props\n\t\tconst isEditing = useIsEditing(shape.id)\n\t\tconst prefersReducedMotion = usePrefersReducedMotion()\n\n\t\tconst rVideo = useRef<HTMLVideoElement>(null!)\n\n\t\tconst handlePlay = useCallback<ReactEventHandler<HTMLVideoElement>>(\n\t\t\t(e) => {\n\t\t\t\tconst video = e.currentTarget\n\t\t\t\tif (!video) return\n\n\t\t\t\teditor.updateShapes([\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\tid: shape.id,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaying: true,\n\t\t\t\t\t\t\ttime: video.currentTime,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\t[shape.id, editor]\n\t\t)\n\n\t\tconst handlePause = useCallback<ReactEventHandler<HTMLVideoElement>>(\n\t\t\t(e) => {\n\t\t\t\tconst video = e.currentTarget\n\t\t\t\tif (!video) return\n\n\t\t\t\teditor.updateShapes([\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\tid: shape.id,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaying: false,\n\t\t\t\t\t\t\ttime: video.currentTime,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t])\n\t\t\t},\n\t\t\t[shape.id, editor]\n\t\t)\n\n\t\tconst handleSetCurrentTime = useCallback<ReactEventHandler<HTMLVideoElement>>(\n\t\t\t(e) => {\n\t\t\t\tconst video = e.currentTarget\n\t\t\t\tif (!video) return\n\n\t\t\t\tif (isEditing) {\n\t\t\t\t\teditor.updateShapes([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\t\tid: shape.id,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\ttime: video.currentTime,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t}\n\t\t\t},\n\t\t\t[isEditing, shape.id, editor]\n\t\t)\n\n\t\tconst [isLoaded, setIsLoaded] = useState(false)\n\n\t\tconst handleLoadedData = useCallback<ReactEventHandler<HTMLVideoElement>>(\n\t\t\t(e) => {\n\t\t\t\tconst video = e.currentTarget\n\t\t\t\tif (!video) return\n\t\t\t\tif (time !== video.currentTime) {\n\t\t\t\t\tvideo.currentTime = time\n\t\t\t\t}\n\n\t\t\t\tif (!playing) {\n\t\t\t\t\tvideo.pause()\n\t\t\t\t}\n\n\t\t\t\tsetIsLoaded(true)\n\t\t\t},\n\t\t\t[playing, time]\n\t\t)\n\n\t\t// If the current time changes and we're not editing the video, update the video time\n\t\tuseEffect(() => {\n\t\t\tconst video = rVideo.current\n\t\t\tif (!video) return\n\n\t\t\tif (isLoaded && !isEditing && time !== video.currentTime) {\n\t\t\t\tvideo.currentTime = time\n\t\t\t}\n\n\t\t\tif (isEditing) {\n\t\t\t\tif (document.activeElement !== video) {\n\t\t\t\t\tvideo.focus()\n\t\t\t\t}\n\t\t\t}\n\t\t}, [isEditing, isLoaded, time])\n\n\t\tuseEffect(() => {\n\t\t\tif (prefersReducedMotion) {\n\t\t\t\tconst video = rVideo.current\n\t\t\t\tif (!video) return\n\t\t\t\tvideo.pause()\n\t\t\t\tvideo.currentTime = 0\n\t\t\t}\n\t\t}, [rVideo, prefersReducedMotion])\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<HTMLContainer\n\t\t\t\t\tid={shape.id}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: 'var(--color-text-3)',\n\t\t\t\t\t\tbackgroundColor: asset ? 'transparent' : 'var(--color-low)',\n\t\t\t\t\t\tborder: asset ? 'none' : '1px solid var(--color-low-border)',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"tl-counter-scaled\">\n\t\t\t\t\t\t<div className=\"tl-video-container\">\n\t\t\t\t\t\t\t{!asset?.props.src ? (\n\t\t\t\t\t\t\t\t<BrokenAssetIcon />\n\t\t\t\t\t\t\t) : url ? (\n\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\tref={rVideo}\n\t\t\t\t\t\t\t\t\tstyle={isEditing ? { pointerEvents: 'all' } : undefined}\n\t\t\t\t\t\t\t\t\tclassName={`tl-video tl-video-shape-${shape.id.split(':')[1]}`}\n\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\t\tplaysInline\n\t\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t\tmuted\n\t\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\t\tdisableRemotePlayback\n\t\t\t\t\t\t\t\t\tdisablePictureInPicture\n\t\t\t\t\t\t\t\t\tcontrols={isEditing && showControls}\n\t\t\t\t\t\t\t\t\tonPlay={handlePlay}\n\t\t\t\t\t\t\t\t\tonPause={handlePause}\n\t\t\t\t\t\t\t\t\tonTimeUpdate={handleSetCurrentTime}\n\t\t\t\t\t\t\t\t\tonLoadedData={handleLoadedData}\n\t\t\t\t\t\t\t\t\thidden={!isLoaded}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<source src={url} />\n\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</HTMLContainer>\n\t\t\t\t{'url' in shape.props && shape.props.url && (\n\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={editor.getZoomLevel()} />\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\tindicator(shape: TLVideoShape) {\n\t\treturn <rect width={toDomPrecision(shape.props.w)} height={toDomPrecision(shape.props.h)} />\n\t}\n\n\toverride toSvg(shape: TLVideoShape) {\n\t\treturn <image href={serializeVideo(shape.id)} width={shape.props.w} height={shape.props.h} />\n\t}\n}\n\n// Function from v1, could be improved but explicitly using this.model.time (?)\nfunction serializeVideo(id: string): string {\n\tconst splitId = id.split(':')[1]\n\tconst video = document.querySelector(`.tl-video-shape-${splitId}`) as HTMLVideoElement\n\tif (video) {\n\t\tconst canvas = document.createElement('canvas')\n\t\tcanvas.width = video.videoWidth\n\t\tcanvas.height = video.videoHeight\n\t\tcanvas.getContext('2d')!.drawImage(video, 0, 0)\n\t\treturn canvas.toDataURL('image/png')\n\t} else throw new Error('Video with not found when attempting serialization.')\n}\n"],
  "mappings": "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",
  "names": []
}
