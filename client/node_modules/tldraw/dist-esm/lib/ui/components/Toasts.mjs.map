{
  "version": 3,
  "sources": ["../../../../src/lib/ui/components/Toasts.tsx"],
  "sourcesContent": ["import * as T from '@radix-ui/react-toast'\nimport { useEditor } from '@tldraw/editor'\nimport * as React from 'react'\nimport { AlertSeverity, TLUiToast, useToasts } from '../context/toasts'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport { TLUiIconType } from '../icon-types'\nimport { TldrawUiButton } from './primitives/Button/TldrawUiButton'\nimport { TldrawUiButtonLabel } from './primitives/Button/TldrawUiButtonLabel'\nimport { TldrawUiIcon } from './primitives/TldrawUiIcon'\n\nconst SEVERITY_TO_ICON: { [msg in AlertSeverity]: TLUiIconType } = {\n\tsuccess: 'check-circle',\n\twarning: 'warning-triangle',\n\terror: 'cross-circle',\n\tinfo: 'info-circle',\n}\n\nfunction Toast({ toast }: { toast: TLUiToast }) {\n\tconst { removeToast } = useToasts()\n\tconst msg = useTranslation()\n\n\tconst onOpenChange = (isOpen: boolean) => {\n\t\tif (!isOpen) {\n\t\t\tremoveToast(toast.id)\n\t\t}\n\t}\n\n\tconst hasActions = toast.actions && toast.actions.length > 0\n\n\tconst icon = toast.icon || (toast.severity && SEVERITY_TO_ICON[toast.severity])\n\n\treturn (\n\t\t<T.Root\n\t\t\tonOpenChange={onOpenChange}\n\t\t\tclassName=\"tlui-toast__container\"\n\t\t\tduration={toast.keepOpen ? Infinity : 5000}\n\t\t\tdata-severity={toast.severity}\n\t\t>\n\t\t\t{icon && (\n\t\t\t\t<div className=\"tlui-toast__icon\">\n\t\t\t\t\t<TldrawUiIcon icon={icon} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"tlui-toast__main\">\n\t\t\t\t<div className=\"tlui-toast__content\">\n\t\t\t\t\t{toast.title && <T.Title className=\"tlui-toast__title\">{toast.title}</T.Title>}\n\t\t\t\t\t{toast.description && (\n\t\t\t\t\t\t<T.Description className=\"tlui-toast__description\">{toast.description}</T.Description>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{toast.actions && (\n\t\t\t\t\t<div className=\"tlui-toast__actions\">\n\t\t\t\t\t\t{toast.actions.map((action, i) => (\n\t\t\t\t\t\t\t<T.Action key={i} altText={action.label} asChild onClick={action.onClick}>\n\t\t\t\t\t\t\t\t<TldrawUiButton type={action.type}>\n\t\t\t\t\t\t\t\t\t<TldrawUiButtonLabel>{action.label}</TldrawUiButtonLabel>\n\t\t\t\t\t\t\t\t</TldrawUiButton>\n\t\t\t\t\t\t\t</T.Action>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<T.Close asChild>\n\t\t\t\t\t\t\t<TldrawUiButton\n\t\t\t\t\t\t\t\ttype=\"normal\"\n\t\t\t\t\t\t\t\tclassName=\"tlui-toast__close\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: 'auto' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TldrawUiButtonLabel>{toast.closeLabel ?? msg('toast.close')}</TldrawUiButtonLabel>\n\t\t\t\t\t\t\t</TldrawUiButton>\n\t\t\t\t\t\t</T.Close>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{!hasActions && (\n\t\t\t\t<T.Close asChild>\n\t\t\t\t\t<TldrawUiButton type=\"normal\" className=\"tlui-toast__close\">\n\t\t\t\t\t\t<TldrawUiButtonLabel>{toast.closeLabel ?? msg('toast.close')}</TldrawUiButtonLabel>\n\t\t\t\t\t</TldrawUiButton>\n\t\t\t\t</T.Close>\n\t\t\t)}\n\t\t</T.Root>\n\t)\n}\n\nfunction _Toasts() {\n\tconst { toasts } = useToasts()\n\n\treturn (\n\t\t<>\n\t\t\t{toasts.map((toast) => (\n\t\t\t\t<Toast key={toast.id} toast={toast} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport const Toasts = React.memo(_Toasts)\n\nexport function ToastViewport() {\n\tconst editor = useEditor()\n\tconst { toasts } = useToasts()\n\n\tconst [hasToasts, setHasToasts] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tlet timeoutId = -1\n\t\tif (toasts.length) {\n\t\t\tsetHasToasts(true)\n\t\t} else {\n\t\t\ttimeoutId = editor.timers.setTimeout(() => {\n\t\t\t\tsetHasToasts(false)\n\t\t\t}, 1000)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeoutId)\n\t\t}\n\t}, [toasts.length, setHasToasts, editor])\n\n\tif (!hasToasts) return null\n\n\treturn <T.ToastViewport className=\"tlui-toast__viewport\" />\n}\n"],
  "mappings": "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",
  "names": []
}
