import { openDB } from "idb";
const STORE_PREFIX = "TLDRAW_ASSET_STORE_v1";
const Table = {
  Assets: "assets"
};
async function withDb(storeId, cb) {
  const db = await openDB(storeId, 1, {
    upgrade(database) {
      if (!database.objectStoreNames.contains(Table.Assets)) {
        database.createObjectStore(Table.Assets);
      }
    }
  });
  try {
    return await cb(db);
  } finally {
    db.close();
  }
}
async function getAssetFromIndexedDb({
  persistenceKey,
  assetId
}) {
  const storeId = STORE_PREFIX + persistenceKey;
  return await withDb(storeId, async (db) => {
    const tx = db.transaction([Table.Assets], "readwrite");
    const assetsStore = tx.objectStore(Table.Assets);
    return await assetsStore.get(assetId);
  });
}
async function storeAssetInIndexedDb({
  persistenceKey,
  assetId,
  blob
}) {
  const storeId = STORE_PREFIX + persistenceKey;
  await withDb(storeId, async (db) => {
    const tx = db.transaction([Table.Assets], "readwrite");
    const assetsStore = tx.objectStore(Table.Assets);
    await assetsStore.put(blob, assetId);
    await tx.done;
  });
}
export {
  getAssetFromIndexedDb,
  storeAssetInIndexedDb
};
//# sourceMappingURL=AssetBlobStore.mjs.map
