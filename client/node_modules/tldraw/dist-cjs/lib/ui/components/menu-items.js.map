{
  "version": 3,
  "sources": ["../../../../src/lib/ui/components/menu-items.tsx"],
  "sourcesContent": ["import {\n\tTLBookmarkShape,\n\tTLEmbedShape,\n\tTLFrameShape,\n\tTLImageShape,\n\tTLPageId,\n\tuseEditor,\n\tuseValue,\n} from '@tldraw/editor'\nimport { getEmbedInfo } from '../../utils/embeds/embeds'\nimport { useActions } from '../context/actions'\nimport { useUiEvents } from '../context/events'\nimport { useToasts } from '../context/toasts'\nimport {\n\tshowMenuPaste,\n\tuseAllowGroup,\n\tuseAllowUngroup,\n\tuseAnySelectedShapesCount,\n\tuseHasLinkShapeSelected,\n\tuseOnlyFlippableShape,\n\tuseShowAutoSizeToggle,\n\tuseThreeStackableItems,\n\tuseUnlockedSelectedShapesCount,\n} from '../hooks/menu-hooks'\nimport { TldrawUiMenuCheckboxItem } from './primitives/menus/TldrawUiMenuCheckboxItem'\nimport { TldrawUiMenuGroup } from './primitives/menus/TldrawUiMenuGroup'\nimport { TldrawUiMenuItem } from './primitives/menus/TldrawUiMenuItem'\nimport { TldrawUiMenuSubmenu } from './primitives/menus/TldrawUiMenuSubmenu'\n\n/* -------------------- Selection ------------------- */\n/** @public @react */\nexport function ToggleAutoSizeMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useShowAutoSizeToggle()\n\tif (!shouldDisplay) return null\n\treturn <TldrawUiMenuItem {...actions['toggle-auto-size']} />\n}\n/** @public @react */\nexport function EditLinkMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useHasLinkShapeSelected()\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['edit-link']} />\n}\n/** @public @react */\nexport function DuplicateMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useUnlockedSelectedShapesCount(1)\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['duplicate']} />\n}\n/** @public @react */\nexport function FlattenMenuItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst shouldDisplay = useValue(\n\t\t'should display flatten option',\n\t\t() => {\n\t\t\tconst selectedShapeIds = editor.getSelectedShapeIds()\n\t\t\tif (selectedShapeIds.length === 0) return false\n\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\tif (onlySelectedShape && editor.isShapeOfType<TLImageShape>(onlySelectedShape, 'image')) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true\n\t\t},\n\t\t[editor]\n\t)\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['flatten-to-image']} />\n}\n/** @public @react */\nexport function GroupMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useAllowGroup()\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['group']} />\n}\n/** @public @react */\nexport function UngroupMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useAllowUngroup()\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['ungroup']} />\n}\n/** @public @react */\nexport function RemoveFrameMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst shouldDisplay = useValue(\n\t\t'allow unframe',\n\t\t() => {\n\t\t\tconst selectedShapes = editor.getSelectedShapes()\n\t\t\tif (selectedShapes.length === 0) return false\n\t\t\treturn selectedShapes.every((shape) => editor.isShapeOfType<TLFrameShape>(shape, 'frame'))\n\t\t},\n\t\t[editor]\n\t)\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['remove-frame']} />\n}\n/** @public @react */\nexport function FitFrameToContentMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst shouldDisplay = useValue(\n\t\t'allow fit frame to content',\n\t\t() => {\n\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\tif (!onlySelectedShape) return false\n\t\t\treturn (\n\t\t\t\teditor.isShapeOfType<TLFrameShape>(onlySelectedShape, 'frame') &&\n\t\t\t\teditor.getSortedChildIdsForParent(onlySelectedShape).length > 0\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['fit-frame-to-content']} />\n}\n/** @public @react */\nexport function ToggleLockMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst shouldDisplay = useValue('selected shapes', () => editor.getSelectedShapes().length > 0, [\n\t\teditor,\n\t])\n\tif (!shouldDisplay) return null\n\n\treturn <TldrawUiMenuItem {...actions['toggle-lock']} />\n}\n/** @public @react */\nexport function ToggleTransparentBgMenuItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isTransparentBg = useValue(\n\t\t'isTransparentBg',\n\t\t() => !editor.getInstanceState().exportBackground,\n\t\t[editor]\n\t)\n\treturn (\n\t\t<TldrawUiMenuCheckboxItem {...actions['toggle-transparent']} checked={isTransparentBg} toggle />\n\t)\n}\n/** @public @react */\nexport function UnlockAllMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst shouldDisplay = useValue('any shapes', () => editor.getCurrentPageShapeIds().size > 0, [\n\t\teditor,\n\t])\n\n\treturn <TldrawUiMenuItem {...actions['unlock-all']} disabled={!shouldDisplay} />\n}\n\n/* ---------------------- Zoom ---------------------- */\n/** @public @react */\nexport function ZoomTo100MenuItem() {\n\tconst editor = useEditor()\n\tconst isZoomedTo100 = useValue('zoomed to 100', () => editor.getZoomLevel() === 1, [editor])\n\tconst actions = useActions()\n\n\treturn <TldrawUiMenuItem {...actions['zoom-to-100']} noClose disabled={isZoomedTo100} />\n}\n/** @public @react */\nexport function ZoomToFitMenuItem() {\n\tconst editor = useEditor()\n\tconst hasShapes = useValue('has shapes', () => editor.getCurrentPageShapeIds().size > 0, [editor])\n\tconst actions = useActions()\n\n\treturn (\n\t\t<TldrawUiMenuItem\n\t\t\t{...actions['zoom-to-fit']}\n\t\t\tdisabled={!hasShapes}\n\t\t\tdata-testid=\"minimap.zoom-menu.zoom-to-fit\"\n\t\t\tnoClose\n\t\t/>\n\t)\n}\n/** @public @react */\nexport function ZoomToSelectionMenuItem() {\n\tconst editor = useEditor()\n\tconst hasSelected = useValue('has shapes', () => editor.getSelectedShapeIds().length > 0, [\n\t\teditor,\n\t])\n\tconst actions = useActions()\n\n\treturn (\n\t\t<TldrawUiMenuItem\n\t\t\t{...actions['zoom-to-selection']}\n\t\t\tdisabled={!hasSelected}\n\t\t\tdata-testid=\"minimap.zoom-menu.zoom-to-selection\"\n\t\t\tnoClose\n\t\t/>\n\t)\n}\n\n/* -------------------- Clipboard ------------------- */\n\n/** @public @react */\nexport function ClipboardMenuGroup() {\n\treturn (\n\t\t<TldrawUiMenuGroup id=\"clipboard\">\n\t\t\t<CutMenuItem />\n\t\t\t<CopyMenuItem />\n\t\t\t<PasteMenuItem />\n\t\t\t<DuplicateMenuItem />\n\t\t\t<DeleteMenuItem />\n\t\t</TldrawUiMenuGroup>\n\t)\n}\n\n/** @public @react */\nexport function CopyAsMenuGroup() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst atLeastOneShapeOnPage = useValue(\n\t\t'atLeastOneShapeOnPage',\n\t\t() => editor.getCurrentPageShapeIds().size > 0,\n\t\t[editor]\n\t)\n\n\treturn (\n\t\t<TldrawUiMenuSubmenu\n\t\t\tid=\"copy-as\"\n\t\t\tlabel=\"context-menu.copy-as\"\n\t\t\tsize=\"small\"\n\t\t\tdisabled={!atLeastOneShapeOnPage}\n\t\t>\n\t\t\t<TldrawUiMenuGroup id=\"copy-as-group\">\n\t\t\t\t<TldrawUiMenuItem {...actions['copy-as-svg']} />\n\t\t\t\t{Boolean(window.navigator.clipboard?.write) && (\n\t\t\t\t\t<TldrawUiMenuItem {...actions['copy-as-png']} />\n\t\t\t\t)}\n\t\t\t\t<TldrawUiMenuItem {...actions['copy-as-json']} />\n\t\t\t</TldrawUiMenuGroup>\n\t\t\t<TldrawUiMenuGroup id=\"copy-as-bg\">\n\t\t\t\t<ToggleTransparentBgMenuItem />\n\t\t\t</TldrawUiMenuGroup>\n\t\t</TldrawUiMenuSubmenu>\n\t)\n}\n\n/** @public @react */\nexport function CutMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useUnlockedSelectedShapesCount(1)\n\n\treturn <TldrawUiMenuItem {...actions['cut']} disabled={!shouldDisplay} />\n}\n\n/** @public @react */\nexport function CopyMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = useAnySelectedShapesCount(1)\n\n\treturn <TldrawUiMenuItem {...actions['copy']} disabled={!shouldDisplay} />\n}\n\n/** @public @react */\nexport function PasteMenuItem() {\n\tconst actions = useActions()\n\tconst shouldDisplay = showMenuPaste\n\n\treturn <TldrawUiMenuItem {...actions['paste']} disabled={!shouldDisplay} />\n}\n\n/* ------------------- Conversions ------------------ */\n\n/** @public @react */\nexport function ConversionsMenuGroup() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst atLeastOneShapeOnPage = useValue(\n\t\t'atLeastOneShapeOnPage',\n\t\t() => editor.getCurrentPageShapeIds().size > 0,\n\t\t[editor]\n\t)\n\n\tif (!atLeastOneShapeOnPage) return null\n\n\treturn (\n\t\t<TldrawUiMenuGroup id=\"conversions\">\n\t\t\t<CopyAsMenuGroup />\n\t\t\t<TldrawUiMenuSubmenu id=\"export-as\" label=\"context-menu.export-as\" size=\"small\">\n\t\t\t\t<TldrawUiMenuGroup id=\"export-as-group\">\n\t\t\t\t\t<TldrawUiMenuItem {...actions['export-as-svg']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['export-as-png']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['export-as-json']} />\n\t\t\t\t</TldrawUiMenuGroup>\n\t\t\t\t<TldrawUiMenuGroup id=\"export-as-bg\">\n\t\t\t\t\t<ToggleTransparentBgMenuItem />\n\t\t\t\t</TldrawUiMenuGroup>\n\t\t\t</TldrawUiMenuSubmenu>\n\t\t</TldrawUiMenuGroup>\n\t)\n}\n\n/* ------------------ Set Selection ----------------- */\n/** @public @react */\nexport function SelectAllMenuItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst atLeastOneShapeOnPage = useValue(\n\t\t'atLeastOneShapeOnPage',\n\t\t() => editor.getCurrentPageShapeIds().size > 0,\n\t\t[editor]\n\t)\n\n\treturn <TldrawUiMenuItem {...actions['select-all']} disabled={!atLeastOneShapeOnPage} />\n}\n\n/* ------------------ Delete Group ------------------ */\n/** @public @react */\nexport function DeleteMenuItem() {\n\tconst actions = useActions()\n\tconst oneSelected = useUnlockedSelectedShapesCount(1)\n\n\treturn <TldrawUiMenuItem {...actions['delete']} disabled={!oneSelected} />\n}\n\n/* --------------------- Modify --------------------- */\n\n/** @public @react */\nexport function EditMenuSubmenu() {\n\treturn (\n\t\t<TldrawUiMenuSubmenu id=\"edit\" label=\"context-menu.edit\" size=\"small\">\n\t\t\t<GroupMenuItem />\n\t\t\t<UngroupMenuItem />\n\t\t\t<FlattenMenuItem />\n\t\t\t<EditLinkMenuItem />\n\t\t\t<FitFrameToContentMenuItem />\n\t\t\t<RemoveFrameMenuItem />\n\t\t\t<ConvertToEmbedMenuItem />\n\t\t\t<ConvertToBookmarkMenuItem />\n\t\t\t<ToggleAutoSizeMenuItem />\n\t\t\t<ToggleLockMenuItem />\n\t\t</TldrawUiMenuSubmenu>\n\t)\n}\n\n/** @public @react */\nexport function ArrangeMenuSubmenu() {\n\tconst twoSelected = useUnlockedSelectedShapesCount(2)\n\tconst onlyFlippableShapeSelected = useOnlyFlippableShape()\n\tconst actions = useActions()\n\n\tif (!(twoSelected || onlyFlippableShapeSelected)) return null\n\n\treturn (\n\t\t<TldrawUiMenuSubmenu id=\"arrange\" label=\"context-menu.arrange\" size=\"small\">\n\t\t\t{twoSelected && (\n\t\t\t\t<TldrawUiMenuGroup id=\"align\">\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-left']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-center-horizontal']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-right']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-top']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-center-vertical']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['align-bottom']} />\n\t\t\t\t</TldrawUiMenuGroup>\n\t\t\t)}\n\t\t\t<DistributeMenuGroup />\n\t\t\t{twoSelected && (\n\t\t\t\t<TldrawUiMenuGroup id=\"stretch\">\n\t\t\t\t\t<TldrawUiMenuItem {...actions['stretch-horizontal']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['stretch-vertical']} />\n\t\t\t\t</TldrawUiMenuGroup>\n\t\t\t)}\n\t\t\t{(twoSelected || onlyFlippableShapeSelected) && (\n\t\t\t\t<TldrawUiMenuGroup id=\"flip\">\n\t\t\t\t\t<TldrawUiMenuItem {...actions['flip-horizontal']} />\n\t\t\t\t\t<TldrawUiMenuItem {...actions['flip-vertical']} />\n\t\t\t\t</TldrawUiMenuGroup>\n\t\t\t)}\n\t\t\t<OrderMenuGroup />\n\t\t</TldrawUiMenuSubmenu>\n\t)\n}\n\nfunction DistributeMenuGroup() {\n\tconst actions = useActions()\n\tconst threeSelected = useUnlockedSelectedShapesCount(3)\n\tif (!threeSelected) return null\n\n\treturn (\n\t\t<TldrawUiMenuGroup id=\"distribute\">\n\t\t\t<TldrawUiMenuItem {...actions['distribute-horizontal']} />\n\t\t\t<TldrawUiMenuItem {...actions['distribute-vertical']} />\n\t\t</TldrawUiMenuGroup>\n\t)\n}\n\nfunction OrderMenuGroup() {\n\tconst actions = useActions()\n\tconst twoSelected = useUnlockedSelectedShapesCount(2)\n\tconst threeStackableItems = useThreeStackableItems()\n\tif (!twoSelected) return null\n\n\treturn (\n\t\t<TldrawUiMenuGroup id=\"order\">\n\t\t\t<TldrawUiMenuItem {...actions['pack']} />\n\t\t\t{threeStackableItems && <TldrawUiMenuItem {...actions['stack-horizontal']} />}\n\t\t\t{threeStackableItems && <TldrawUiMenuItem {...actions['stack-vertical']} />}\n\t\t</TldrawUiMenuGroup>\n\t)\n}\n/** @public @react */\nexport function ReorderMenuSubmenu() {\n\tconst actions = useActions()\n\tconst oneSelected = useUnlockedSelectedShapesCount(1)\n\tif (!oneSelected) return null\n\n\treturn (\n\t\t<TldrawUiMenuSubmenu id=\"reorder\" label=\"context-menu.reorder\" size=\"small\">\n\t\t\t<TldrawUiMenuGroup id=\"reorder\">\n\t\t\t\t<TldrawUiMenuItem {...actions['bring-to-front']} />\n\t\t\t\t<TldrawUiMenuItem {...actions['bring-forward']} />\n\t\t\t\t<TldrawUiMenuItem {...actions['send-backward']} />\n\t\t\t\t<TldrawUiMenuItem {...actions['send-to-back']} />\n\t\t\t</TldrawUiMenuGroup>\n\t\t</TldrawUiMenuSubmenu>\n\t)\n}\n/** @public @react */\nexport function MoveToPageMenu() {\n\tconst editor = useEditor()\n\tconst pages = useValue('pages', () => editor.getPages(), [editor])\n\tconst currentPageId = useValue('current page id', () => editor.getCurrentPageId(), [editor])\n\tconst { addToast } = useToasts()\n\tconst actions = useActions()\n\tconst trackEvent = useUiEvents()\n\n\tconst oneSelected = useUnlockedSelectedShapesCount(1)\n\tif (!oneSelected) return null\n\n\treturn (\n\t\t<TldrawUiMenuSubmenu id=\"move-to-page\" label=\"context-menu.move-to-page\" size=\"small\">\n\t\t\t<TldrawUiMenuGroup id=\"pages\">\n\t\t\t\t{pages.map((page) => (\n\t\t\t\t\t<TldrawUiMenuItem\n\t\t\t\t\t\tid={page.id}\n\t\t\t\t\t\tkey={page.id}\n\t\t\t\t\t\tdisabled={currentPageId === page.id}\n\t\t\t\t\t\tlabel={page.name}\n\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\teditor.mark('move_shapes_to_page')\n\t\t\t\t\t\t\teditor.moveShapesToPage(editor.getSelectedShapeIds(), page.id as TLPageId)\n\n\t\t\t\t\t\t\tconst toPage = editor.getPage(page.id)\n\n\t\t\t\t\t\t\tif (toPage) {\n\t\t\t\t\t\t\t\taddToast({\n\t\t\t\t\t\t\t\t\ttitle: 'Changed Page',\n\t\t\t\t\t\t\t\t\tdescription: `Moved to ${toPage.name}.`,\n\t\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Go Back',\n\t\t\t\t\t\t\t\t\t\t\ttype: 'primary',\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\t\t\t\teditor.mark('change-page')\n\t\t\t\t\t\t\t\t\t\t\t\teditor.setCurrentPage(currentPageId)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrackEvent('move-to-page', { source: 'context-menu' })\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</TldrawUiMenuGroup>\n\t\t\t<TldrawUiMenuGroup id=\"new-page\">\n\t\t\t\t<TldrawUiMenuItem {...actions['new-page']} />\n\t\t\t</TldrawUiMenuGroup>\n\t\t</TldrawUiMenuSubmenu>\n\t)\n}\n\n/** @public @react */\nexport function ConvertToBookmarkMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\n\tconst oneEmbedSelected = useValue(\n\t\t'oneEmbedSelected',\n\t\t() => {\n\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\tif (!onlySelectedShape) return false\n\t\t\treturn !!(\n\t\t\t\teditor.isShapeOfType<TLEmbedShape>(onlySelectedShape, 'embed') &&\n\t\t\t\tonlySelectedShape.props.url &&\n\t\t\t\t!editor.isShapeOrAncestorLocked(onlySelectedShape)\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!oneEmbedSelected) return null\n\treturn <TldrawUiMenuItem {...actions['convert-to-bookmark']} />\n}\n\n/** @public @react */\nexport function ConvertToEmbedMenuItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\n\tconst oneEmbeddableBookmarkSelected = useValue(\n\t\t'oneEmbeddableBookmarkSelected',\n\t\t() => {\n\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\tif (!onlySelectedShape) return false\n\t\t\treturn !!(\n\t\t\t\teditor.isShapeOfType<TLBookmarkShape>(onlySelectedShape, 'bookmark') &&\n\t\t\t\tonlySelectedShape.props.url &&\n\t\t\t\tgetEmbedInfo(onlySelectedShape.props.url) &&\n\t\t\t\t!editor.isShapeOrAncestorLocked(onlySelectedShape)\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!oneEmbeddableBookmarkSelected) return null\n\n\treturn <TldrawUiMenuItem {...actions['convert-to-embed']} />\n}\n\n/* ------------------- Preferences ------------------ */\n/** @public @react */\nexport function ToggleSnapModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isSnapMode = useValue('isSnapMode', () => editor.user.getIsSnapMode(), [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-snap-mode']} checked={isSnapMode} />\n}\n/** @public @react */\nexport function ToggleToolLockItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isToolLock = useValue('isToolLock', () => editor.getInstanceState().isToolLocked, [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-tool-lock']} checked={isToolLock} />\n}\n/** @public @react */\nexport function ToggleGridItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isGridMode = useValue('isGridMode', () => editor.getInstanceState().isGridMode, [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-grid']} checked={isGridMode} />\n}\n\n/** @public @react */\nexport function ToggleWrapModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isWrapMode = useValue('isWrapMode', () => editor.user.getIsWrapMode(), [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-wrap-mode']} checked={isWrapMode} />\n}\n\n/** @public @react */\nexport function ToggleDarkModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isDarkMode = useValue('isDarkMode', () => editor.user.getIsDarkMode(), [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-dark-mode']} checked={isDarkMode} />\n}\n/** @public @react */\nexport function ToggleFocusModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isFocusMode = useValue('isFocusMode', () => editor.getInstanceState().isFocusMode, [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-focus-mode']} checked={isFocusMode} />\n}\n/** @public @react */\nexport function ToggleEdgeScrollingItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst edgeScrollSpeed = useValue('edgeScrollSpeed', () => editor.user.getEdgeScrollSpeed(), [\n\t\teditor,\n\t])\n\treturn (\n\t\t<TldrawUiMenuCheckboxItem\n\t\t\t{...actions['toggle-edge-scrolling']}\n\t\t\tchecked={edgeScrollSpeed === 1}\n\t\t/>\n\t)\n}\n/** @public @react */\nexport function ToggleReduceMotionItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst animationSpeed = useValue('animationSpeed', () => editor.user.getAnimationSpeed(), [editor])\n\treturn (\n\t\t<TldrawUiMenuCheckboxItem {...actions['toggle-reduce-motion']} checked={animationSpeed === 0} />\n\t)\n}\n/** @public @react */\nexport function ToggleDebugModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isDebugMode = useValue('isDebugMode', () => editor.getInstanceState().isDebugMode, [editor])\n\treturn <TldrawUiMenuCheckboxItem {...actions['toggle-debug-mode']} checked={isDebugMode} />\n}\n\n/** @public @react */\nexport function ToggleDynamicSizeModeItem() {\n\tconst actions = useActions()\n\tconst editor = useEditor()\n\tconst isDynamicResizeMode = useValue(\n\t\t'dynamic resize',\n\t\t() => editor.user.getIsDynamicResizeMode(),\n\t\t[editor]\n\t)\n\treturn (\n\t\t<TldrawUiMenuCheckboxItem\n\t\t\t{...actions['toggle-dynamic-size-mode']}\n\t\t\tchecked={isDynamicResizeMode}\n\t\t/>\n\t)\n}\n\n/* ---------------------- Print --------------------- */\n/** @public @react */\nexport function PrintItem() {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\tconst emptyPage = useValue('emptyPage', () => editor.getCurrentPageShapeIds().size === 0, [\n\t\teditor,\n\t])\n\treturn <TldrawUiMenuItem {...actions['print']} disabled={emptyPage} />\n}\n"],
  "mappings": "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",
  "names": []
}
