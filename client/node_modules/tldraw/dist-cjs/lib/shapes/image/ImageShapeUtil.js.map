{
  "version": 3,
  "sources": ["../../../../src/lib/shapes/image/ImageShapeUtil.tsx"],
  "sourcesContent": ["/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n\tBaseBoxShapeUtil,\n\tFileHelpers,\n\tHTMLContainer,\n\tImage,\n\tMediaHelpers,\n\tTLImageShape,\n\tTLOnDoubleClickHandler,\n\tTLShapePartial,\n\tVec,\n\tfetch,\n\timageShapeMigrations,\n\timageShapeProps,\n\tstructuredClone,\n\ttoDomPrecision,\n} from '@tldraw/editor'\nimport { useEffect, useState } from 'react'\nimport { BrokenAssetIcon } from '../shared/BrokenAssetIcon'\nimport { HyperlinkButton } from '../shared/HyperlinkButton'\nimport { useAsset } from '../shared/useAsset'\nimport { usePrefersReducedMotion } from '../shared/usePrefersReducedMotion'\n\nasync function getDataURIFromURL(url: string): Promise<string> {\n\tconst response = await fetch(url)\n\tconst blob = await response.blob()\n\treturn FileHelpers.blobToDataUrl(blob)\n}\n\n/** @public */\nexport class ImageShapeUtil extends BaseBoxShapeUtil<TLImageShape> {\n\tstatic override type = 'image' as const\n\tstatic override props = imageShapeProps\n\tstatic override migrations = imageShapeMigrations\n\n\toverride isAspectRatioLocked = () => true\n\toverride canCrop = () => true\n\n\toverride getDefaultProps(): TLImageShape['props'] {\n\t\treturn {\n\t\t\tw: 100,\n\t\t\th: 100,\n\t\t\tassetId: null,\n\t\t\tplaying: true,\n\t\t\turl: '',\n\t\t\tcrop: null,\n\t\t}\n\t}\n\n\tisAnimated(shape: TLImageShape) {\n\t\tconst asset = shape.props.assetId ? this.editor.getAsset(shape.props.assetId) : undefined\n\n\t\tif (!asset) return false\n\n\t\treturn (\n\t\t\t('mimeType' in asset.props && MediaHelpers.isAnimatedImageType(asset?.props.mimeType)) ||\n\t\t\t('isAnimated' in asset.props && asset.props.isAnimated)\n\t\t)\n\t}\n\n\tcomponent(shape: TLImageShape) {\n\t\tconst isCropping = this.editor.getCroppingShapeId() === shape.id\n\t\tconst prefersReducedMotion = usePrefersReducedMotion()\n\t\tconst [staticFrameSrc, setStaticFrameSrc] = useState('')\n\t\tconst [loadedSrc, setLoadedSrc] = useState('')\n\t\tconst isSelected = shape.id === this.editor.getOnlySelectedShapeId()\n\t\tconst { asset, url } = useAsset(shape.id, shape.props.assetId, shape.props.w)\n\n\t\tuseEffect(() => {\n\t\t\t// We preload the image because we might have different source urls for different\n\t\t\t// zoom levels.\n\t\t\t// Preloading the image ensures that the browser caches the image and doesn't\n\t\t\t// cause visual flickering when the image is loaded.\n\t\t\tif (url) {\n\t\t\t\tlet cancelled = false\n\n\t\t\t\tconst image = Image()\n\t\t\t\timage.onload = () => {\n\t\t\t\t\tif (cancelled) return\n\t\t\t\t\tsetLoadedSrc(url)\n\t\t\t\t}\n\t\t\t\timage.src = url\n\n\t\t\t\treturn () => {\n\t\t\t\t\tcancelled = true\n\t\t\t\t}\n\t\t\t}\n\t\t}, [url, shape])\n\n\t\tuseEffect(() => {\n\t\t\tif (url && this.isAnimated(shape)) {\n\t\t\t\tlet cancelled = false\n\n\t\t\t\tconst image = Image()\n\t\t\t\timage.onload = () => {\n\t\t\t\t\tif (cancelled) return\n\n\t\t\t\t\tconst canvas = document.createElement('canvas')\n\t\t\t\t\tcanvas.width = image.width\n\t\t\t\t\tcanvas.height = image.height\n\n\t\t\t\t\tconst ctx = canvas.getContext('2d')\n\t\t\t\t\tif (!ctx) return\n\n\t\t\t\t\tctx.drawImage(image, 0, 0)\n\t\t\t\t\tsetStaticFrameSrc(canvas.toDataURL())\n\t\t\t\t\tsetLoadedSrc(url)\n\t\t\t\t}\n\t\t\t\timage.crossOrigin = 'anonymous'\n\t\t\t\timage.src = url\n\n\t\t\t\treturn () => {\n\t\t\t\t\tcancelled = true\n\t\t\t\t}\n\t\t\t}\n\t\t}, [prefersReducedMotion, url, shape])\n\n\t\tif (asset?.type === 'bookmark') {\n\t\t\tthrow Error(\"Bookmark assets can't be rendered as images\")\n\t\t}\n\n\t\tconst showCropPreview = isSelected && isCropping && this.editor.isIn('select.crop')\n\n\t\t// We only want to reduce motion for mimeTypes that have motion\n\t\tconst reduceMotion =\n\t\t\tprefersReducedMotion && (asset?.props.mimeType?.includes('video') || this.isAnimated(shape))\n\n\t\tconst containerStyle = getCroppedContainerStyle(shape)\n\n\t\t// This is specifically `asset?.props.src` and not `url` because we're looking for broken assets.\n\t\tif (!asset?.props.src) {\n\t\t\treturn (\n\t\t\t\t<HTMLContainer\n\t\t\t\t\tid={shape.id}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\twidth: shape.props.w,\n\t\t\t\t\t\theight: shape.props.h,\n\t\t\t\t\t\tcolor: 'var(--color-text-3)',\n\t\t\t\t\t\tbackgroundColor: asset ? 'transparent' : 'var(--color-low)',\n\t\t\t\t\t\tborder: asset ? 'none' : '1px solid var(--color-low-border)',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"tl-image-container\" style={containerStyle}>\n\t\t\t\t\t\t{asset ? null : <BrokenAssetIcon />}\n\t\t\t\t\t</div>\n\t\t\t\t\t{'url' in shape.props && shape.props.url && (\n\t\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={this.editor.getZoomLevel()} />\n\t\t\t\t\t)}\n\t\t\t\t</HTMLContainer>\n\t\t\t)\n\t\t}\n\n\t\tif (!loadedSrc) return null\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{showCropPreview && (\n\t\t\t\t\t<div style={containerStyle}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"tl-image\"\n\t\t\t\t\t\t\t// We don't set crossOrigin for non-animated images because\n\t\t\t\t\t\t\t// for Cloudflare we don't currenly have that set up.\n\t\t\t\t\t\t\tcrossOrigin={this.isAnimated(shape) ? 'anonymous' : undefined}\n\t\t\t\t\t\t\tsrc={!shape.props.playing || reduceMotion ? staticFrameSrc : loadedSrc}\n\t\t\t\t\t\t\treferrerPolicy=\"strict-origin-when-cross-origin\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: 0.1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<HTMLContainer\n\t\t\t\t\tid={shape.id}\n\t\t\t\t\tstyle={{ overflow: 'hidden', width: shape.props.w, height: shape.props.h }}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"tl-image-container\" style={containerStyle}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"tl-image\"\n\t\t\t\t\t\t\t// We don't set crossOrigin for non-animated images because\n\t\t\t\t\t\t\t// for Cloudflare we don't currenly have that set up.\n\t\t\t\t\t\t\tcrossOrigin={this.isAnimated(shape) ? 'anonymous' : undefined}\n\t\t\t\t\t\t\tsrc={!shape.props.playing || reduceMotion ? staticFrameSrc : loadedSrc}\n\t\t\t\t\t\t\treferrerPolicy=\"strict-origin-when-cross-origin\"\n\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.isAnimated(shape) && !shape.props.playing && (\n\t\t\t\t\t\t\t<div className=\"tl-image__tg\">GIF</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{shape.props.url && (\n\t\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={this.editor.getZoomLevel()} />\n\t\t\t\t\t)}\n\t\t\t\t</HTMLContainer>\n\t\t\t</>\n\t\t)\n\t}\n\n\tindicator(shape: TLImageShape) {\n\t\tconst isCropping = this.editor.getCroppingShapeId() === shape.id\n\t\tif (isCropping) return null\n\t\treturn <rect width={toDomPrecision(shape.props.w)} height={toDomPrecision(shape.props.h)} />\n\t}\n\n\toverride async toSvg(shape: TLImageShape) {\n\t\tif (!shape.props.assetId) return null\n\n\t\tconst asset = this.editor.getAsset(shape.props.assetId)\n\n\t\tif (!asset) return null\n\n\t\tlet src = await this.editor.resolveAssetUrl(shape.props.assetId, {\n\t\t\tshouldResolveToOriginalImage: true,\n\t\t})\n\t\tif (!src) return null\n\t\tif (\n\t\t\tsrc.startsWith('blob:') ||\n\t\t\tsrc.startsWith('http') ||\n\t\t\tsrc.startsWith('/') ||\n\t\t\tsrc.startsWith('./')\n\t\t) {\n\t\t\t// If it's a remote image, we need to fetch it and convert it to a data URI\n\t\t\tsrc = (await getDataURIFromURL(src)) || ''\n\t\t}\n\n\t\tconst containerStyle = getCroppedContainerStyle(shape)\n\t\tconst crop = shape.props.crop\n\t\tif (containerStyle.transform && crop) {\n\t\t\tconst { transform, width, height } = containerStyle\n\t\t\tconst croppedWidth = (crop.bottomRight.x - crop.topLeft.x) * width\n\t\t\tconst croppedHeight = (crop.bottomRight.y - crop.topLeft.y) * height\n\n\t\t\tconst points = [\n\t\t\t\tnew Vec(0, 0),\n\t\t\t\tnew Vec(croppedWidth, 0),\n\t\t\t\tnew Vec(croppedWidth, croppedHeight),\n\t\t\t\tnew Vec(0, croppedHeight),\n\t\t\t]\n\n\t\t\tconst cropClipId = `cropClipPath_${shape.id.replace(':', '_')}`\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<clipPath id={cropClipId}>\n\t\t\t\t\t\t\t<polygon points={points.map((p) => `${p.x},${p.y}`).join(' ')} />\n\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<g clipPath={`url(#${cropClipId})`}>\n\t\t\t\t\t\t<image href={src} width={width} height={height} style={{ transform }} />\n\t\t\t\t\t</g>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn <image href={src} width={shape.props.w} height={shape.props.h} />\n\t\t}\n\t}\n\n\toverride onDoubleClick = (shape: TLImageShape) => {\n\t\tconst asset = shape.props.assetId ? this.editor.getAsset(shape.props.assetId) : undefined\n\n\t\tif (!asset) return\n\n\t\tconst canPlay = asset.props.src && this.isAnimated(shape)\n\n\t\tif (!canPlay) return\n\n\t\tthis.editor.updateShapes([\n\t\t\t{\n\t\t\t\ttype: 'image',\n\t\t\t\tid: shape.id,\n\t\t\t\tprops: {\n\t\t\t\t\tplaying: !shape.props.playing,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t}\n\n\toverride onDoubleClickEdge: TLOnDoubleClickHandler<TLImageShape> = (shape) => {\n\t\tconst props = shape.props\n\t\tif (!props) return\n\n\t\tif (this.editor.getCroppingShapeId() !== shape.id) {\n\t\t\treturn\n\t\t}\n\n\t\tconst crop = structuredClone(props.crop) || {\n\t\t\ttopLeft: { x: 0, y: 0 },\n\t\t\tbottomRight: { x: 1, y: 1 },\n\t\t}\n\n\t\t// The true asset dimensions\n\t\tconst w = (1 / (crop.bottomRight.x - crop.topLeft.x)) * shape.props.w\n\t\tconst h = (1 / (crop.bottomRight.y - crop.topLeft.y)) * shape.props.h\n\n\t\tconst pointDelta = new Vec(crop.topLeft.x * w, crop.topLeft.y * h).rot(shape.rotation)\n\n\t\tconst partial: TLShapePartial<TLImageShape> = {\n\t\t\tid: shape.id,\n\t\t\ttype: shape.type,\n\t\t\tx: shape.x - pointDelta.x,\n\t\t\ty: shape.y - pointDelta.y,\n\t\t\tprops: {\n\t\t\t\tcrop: {\n\t\t\t\t\ttopLeft: { x: 0, y: 0 },\n\t\t\t\t\tbottomRight: { x: 1, y: 1 },\n\t\t\t\t},\n\t\t\t\tw,\n\t\t\t\th,\n\t\t\t},\n\t\t}\n\n\t\tthis.editor.updateShapes([partial])\n\t}\n}\n\n/**\n * When an image is cropped we need to translate the image to show the portion withing the cropped\n * area. We do this by translating the image by the negative of the top left corner of the crop\n * area.\n *\n * @param shape - Shape The image shape for which to get the container style\n * @returns - Styles to apply to the image container\n */\nfunction getCroppedContainerStyle(shape: TLImageShape) {\n\tconst crop = shape.props.crop\n\tconst topLeft = crop?.topLeft\n\tif (!topLeft) {\n\t\treturn {\n\t\t\twidth: shape.props.w,\n\t\t\theight: shape.props.h,\n\t\t}\n\t}\n\n\tconst w = (1 / (crop.bottomRight.x - crop.topLeft.x)) * shape.props.w\n\tconst h = (1 / (crop.bottomRight.y - crop.topLeft.y)) * shape.props.h\n\n\tconst offsetX = -topLeft.x * w\n\tconst offsetY = -topLeft.y * h\n\treturn {\n\t\ttransform: `translate(${offsetX}px, ${offsetY}px)`,\n\t\twidth: w,\n\t\theight: h,\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
